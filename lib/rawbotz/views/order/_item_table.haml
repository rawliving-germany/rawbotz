
%table.pure-table.pure-table-bordered
  %thead
    %tr
      %th(style="width: 5%;") Product ID
      %th(style="width: 50%;") Product Name
      %th(style="width: 10%;") Stock (at order- time) / min stock
      %th(style="width: 20%;") Order
      %th(style="width: 5%;")
        %i.fa.fa-cube
      %th(style="width: 10%;") Stock/ Sales history
  %tbody
    - order_items.each do |order_item|
      %tr
        %td
          - if order_item.local_product
            = order_item.local_product.product_id
          - else
            No local product!
        %td
          = local_product_link order_item.local_product
        %td
          = order_item.current_stock
          \/
          = order_item.min_stock
          - last_order_item = order_item.order_item_same_product(order_item.updated_at).first
          - if last_order_item.present? && last_order_item.num_wished
            %br
            %button.pure-button.reorder(data-order_item_id="#{order_item.id}" data-num_wished="#{last_order_item.num_wished}")
              = last_order_item.order.updated_at.strftime("%Y-%m-%d")
              %br
              = last_order_item.num_wished
              \/
              = last_order_item.num_ordered
        %td
          - if order_item.remote_product_id.present?
            = haml "widgets/_qty_wished_input".to_sym, locals: {product: order_item.local_product}
          - else
            No remote product
        %td= order_item.local_product.packsize
        %td
          - stock_url = "/product/#{order_item.local_product.id}/stock_sales_plot"
          %a.stock_show_action{:href => "", :data => {url: stock_url, product: order_item.local_product.name}}
            Stock/Sales
